技巧2 不要自我重复

对于在行尾添加内容这样的常见操作，如添加分号，Vim提供了一个专门的命令，可以把两部操作合并为一步

假设有如下的JavaScript程序片段：
var foo = 1
var bar = 'a'
var foobar = foo + bar

我们想在每行末尾添加一个分号。要实现这一点，先得把光标移到行尾，然后切换到插入模式进行修改。
$命令可以完成移动动作，接着就可以执行a;<Esc>完成修改
要完成全部修改，我们也可以对下面两行做完全相同的操作，可以用.命令重复上次修改,执行两次j$.


减少无关的移动
a命令在当前光标之后添加内容
A命令在当前行的结尾添加内容,不管光标在当前行的什么位置输入A都会进入插入模式，并把光标移到行尾。即$a封装成了一个按键操作

var foo = 1;
var bar = 'a';
var foobar = foo + bar;

等价命令组:光标移至19行A<Esc>;j.(2次)

如果我们不得不给连续50行添加分号，即便每个修改输一次j.,看起来也是一项很繁重的工作

一箭双雕:
A命令把两个动作（$a）合并成了一次按键，很多Vim的单键命令都可以被看成两个或多个其他命令的组合

复合命令        等效的长命令        意义
A               $a                  光标移至行尾并切换到append模式
C               c$                  当前行光标之后的字符病切换到插入模式
s               cl                  删除光标下的字符并切换到插入模式
S               ^c                  删除整行并切换到插入模式
I               ^i                  光标移至当前行最前方并切换到插入模式
o               A<CR>               在当前行之后插入一行
O               ko                  在当前行之前插入一行,k上移一行,o插入到下一行


scbasihccisbcjxzn
ksjfiosdfj
hvjvisdjvidsjv
ndcjkbnjvshdfuowef
djfiwueifohsdcsd
sdjhoifhois

