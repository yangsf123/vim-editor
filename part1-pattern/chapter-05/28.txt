技巧28 在一行或多个连续行上执行命令

很多Ex命令可以用[range]指定要操作的范围。我们可以用行号，位置标记或是查找模式来指定范围的开始位置及结束位置。

Ex命令的优点之一是它们可以在某一范围内的所有行上执行。我们以下面这个简短的HTML文本作为示例：

<!DOCTYPE html>
执行得要比普通模式命令更快


用地址指定一个范围
<html>
    <head><title>Practical Vim</title></head>
    <body><h1>Practical Vim</h1></body>
</html>


运行下面的命令：
:10             光标移动到第十行
:print          打印当前行
:$              跳到文件末尾
:p              print的简写
:3d             跳到第三行并删除这一行
:.,$p           .代表当前行的地址。打印当前行到文件末尾
:%p             %代表当前文件中的所有行
:%s/Practical/Pragmatic/    把每一行内的"Practical"替换为"Pragmatic"

Ex命令执行得要比普通模式命令更快


用高亮选区指定范围

使用命令2G,VG,在按下命令模式:，命令行就会预先填充一个范围:'<,'>
符号'<是代表高亮选区首行的位置标记，'>则代表高亮选区的最后一行

用模式指定范围:/<html>,/<\/html>/p

结论
    定义范围的语法非常灵活，既可以混合搭配行号，位置标记以及查找模式，也可以对它们加以偏移。下表对用来构建Ex命令的地址范围的符号进行了总结：

    符号                地址
    1                   文件的第一行
    $                   文件的最后一行
    0                   虚拟行，位于文件第一行上方
    .                   光标所在行
    'm                  包含位置标记m的行
    '<                  高亮选区的起始行
    '>                  高亮选区的结束行
    %                   整个文件(:1,$的简写形式)


    第0行在文件中并不真实存在，但它作为一个地址，在某些特定场景下会很有用处。特别是，在把指定范围内的行复制或移动到文件开头时，可以用它做:copy{address}及:move{address}命令的最后一个参数

